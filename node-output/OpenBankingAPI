{
  "openapi" : "3.0.0",
  "info" : {
    "title" : "Payment PreAuthorisation API",
    "description" : "This is part of the OpenBanking Extensions project.",
    "contact" : {
      "email" : "developer-support@swift.com"
    },
    "license" : {
      "name" : "API Open License",
      "url" : "https://www.swift.com/file/55996/download?token=XGSPaT2w"
    },
    "version" : "0.2.1"
  },
  "externalDocs" : {
    "description" : "Detailed Documentation: Pre-Authorisation Flows and Use Cases",
    "url" : "https://www.swift.com/standards/community-apis"
  },
  "servers" : [ {
    "url" : "https://virtserver.swaggerhub.com/SWIFT-API/payment-preauthorisation/0.2.1",
    "description" : "SwaggerHub API Auto Mocking"
  } ],
  "tags" : [ {
    "name" : "consumerConsent",
    "description" : "Operations related to consumer consents"
  }, {
    "name" : "paymentPreAuthorisation",
    "description" : "Operations related to payment pre-authorisation"
  }, {
    "name" : "preAuthorisedPaymentInitiation",
    "description" : "Operations related to payment pre-authorised payment initiations"
  } ],
  "paths" : {
    "/consumer-consent" : {
      "post" : {
        "tags" : [ "consumerConsent" ],
        "summary" : "Create a consumer consent.",
        "description" : "This operation allows the merchant to provide the information for getting a consumer consent Id.",
        "operationId" : "createConsumerConsent",
        "parameters" : [ ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ConsumerPreAuthorisationConsent1"
              },
              "example" : {
                "name" : "CustomerA",
                "address" : {
                  "street_name" : "Avenue Adele",
                  "building_number" : 1,
                  "post_code" : 1310,
                  "town_name" : "La Hulpe",
                  "country" : "BE"
                },
                "consent_attributes" : {
                  "allowed_merchants" : [ {
                    "name" : "MerchantA",
                    "address" : {
                      "post_code" : 1000,
                      "town_name" : "Brussels",
                      "country" : "BE"
                    },
                    "identification" : {
                      "organisation_identification" : {
                        "lei" : "213800IUXNWYNNC63Y45"
                      }
                    }
                  } ],
                  "pre_authorisation_purpose" : {
                    "description" : "Hotel reservation"
                  },
                  "maximum_amount" : {
                    "currency" : "EUR",
                    "amount" : 1000
                  }
                },
                "valid_until" : {
                  "date" : "31-12-2019"
                }
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "Created",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ConsumerPreAuthorisationConsent1"
                },
                "example" : {
                  "consumer_consent_id" : "6d05ccb7-c898-4be2-a364-65da58ef5dc6",
                  "name" : "CustomerA",
                  "address" : {
                    "street_name" : "Avenue Adele",
                    "building_number" : 1,
                    "post_code" : 1310,
                    "town_name" : "La Hulpe",
                    "country" : "BE"
                  },
                  "consent_attributes" : {
                    "allowed_merchants" : [ {
                      "name" : "MerchantA",
                      "address" : {
                        "post_code" : 1000,
                        "town_name" : "Brussels",
                        "country" : "BE"
                      },
                      "identification" : {
                        "organisation_identification" : {
                          "lei" : "213800IUXNWYNNC63Y45"
                        }
                      }
                    } ],
                    "pre_authorisation_purpose" : {
                      "description" : "Hotel reservation"
                    },
                    "maximum_amount" : {
                      "currency" : "EUR",
                      "amount" : 1000
                    }
                  },
                  "valid_until" : {
                    "date" : "31-12-2019"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "default" : {
            "description" : "Unexpected Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GenericStatus1"
                }
              }
            }
          }
        }
      }
    },
    "/consumer-consent/{consumer_consent_id}/status" : {
      "get" : {
        "tags" : [ "consumerConsent" ],
        "summary" : "Obtain the status of a specific consumer consent request.",
        "description" : "This operation allows the merchant to obtain the status of a specific consumer consent request.",
        "operationId" : "getConsumerConsentRequestStatus",
        "parameters" : [ {
          "name" : "consumer_consent_id",
          "in" : "path",
          "description" : "Token identification of the consumer consent as defined by the ASPSP.\r\n",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89ab][a-f0-9]{3}-[a-f0-9]{12}$",
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ConsumerPreAuthorisationConsentStatus1"
                },
                "example" : {
                  "status" : "PACK_accepted"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "default" : {
            "description" : "Unexpected Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GenericStatus1"
                }
              }
            }
          }
        }
      }
    },
    "/payment-pre-authorisation" : {
      "post" : {
        "tags" : [ "paymentPreAuthorisation" ],
        "summary" : "Create a payment pre-authorisation.",
        "description" : "This operation allows the merchant to provide the information for the creation of a pre-authorisation.",
        "operationId" : "createPaymentPreAuthorisation",
        "parameters" : [ ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PaymentPreAuthorisation1"
              },
              "example" : {
                "consumer_consent_id" : "6d05ccb7-c898-4be2-a364-65da58ef5dc6",
                "maximum_amount" : {
                  "currency" : "EUR",
                  "amount" : 1000
                },
                "type" : {
                  "code" : "OOFF_one_off"
                },
                "pre_authorisation_purpose" : {
                  "description" : "Hotel reservation"
                },
                "allowed_merchants" : {
                  "name" : "MerchantA",
                  "address" : {
                    "post_code" : 1000,
                    "town_name" : "Brussels",
                    "country" : "BE"
                  },
                  "identification" : {
                    "organisation_identification" : {
                      "lei" : "213800IUXNWYNNC63Y45"
                    }
                  }
                },
                "valid_from" : {
                  "date" : "01-09-2019"
                },
                "valid_until" : {
                  "date" : "31-12-2019"
                }
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "Created",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PaymentPreAuthorisation1"
                },
                "example" : {
                  "consumer_consent_id" : "6d05ccb7-c898-4be2-a364-65da58ef5dc6",
                  "maximum_amount" : {
                    "currency" : "EUR",
                    "amount" : 1000
                  },
                  "type" : {
                    "code" : "OOFF_one_off"
                  },
                  "pre_authorisation_purpose" : {
                    "description" : "Hotel reservation"
                  },
                  "allowed_merchants" : {
                    "name" : "MerchantA",
                    "address" : {
                      "post_code" : 1000,
                      "town_name" : "Brussels",
                      "country" : "BE"
                    },
                    "identification" : {
                      "organisation_identification" : {
                        "lei" : "213800IUXNWYNNC63Y45"
                      }
                    }
                  },
                  "valid_from" : {
                    "date" : "01-09-2019"
                  },
                  "valid_until" : {
                    "date" : "31-12-2019"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "default" : {
            "description" : "Unexpected Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GenericStatus1"
                }
              }
            }
          }
        }
      }
    },
    "/payment-pre-authorisation/{payment_pre_authorisation_id}/charges" : {
      "get" : {
        "tags" : [ "paymentPreAuthorisation" ],
        "summary" : "Get the list of charges associated with a specific payment pre-authorisation.",
        "description" : "This operation allows the merchant get the list of charges associated with a specific pre-authorisation.",
        "operationId" : "getPaymentPreAuthorisationCharges",
        "parameters" : [ {
          "name" : "payment_pre_authorisation_id",
          "in" : "path",
          "description" : "Unique id of the payment pre-authorisation.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89ab][a-f0-9]{3}-[a-f0-9]{12}$",
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PreAuthorisationCharges1"
                },
                "example" : {
                  "charge_id" : "77eae41b-9a00-493d-b59c-5f8b5c153505h",
                  "total" : {
                    "currency" : "EUR",
                    "amount" : 20
                  },
                  "record" : [ {
                    "amount" : {
                      "currency" : "EUR",
                      "amount" : 20
                    },
                    "type" : "Fees"
                  } ]
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "default" : {
            "description" : "Unexpected Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GenericStatus1"
                }
              }
            }
          }
        }
      }
    },
    "/payment-pre-authorisation/{payment_pre_authorisation_id}/payment-initiation" : {
      "post" : {
        "tags" : [ "preAuthorisedPaymentInitiation" ],
        "summary" : "Create a payment initiation under a specific payment pre-authorisation.",
        "description" : "This operation allows the merchant to create a payment initiation after having obtained a specific pre-authorisation.",
        "operationId" : "createPaymentInitiationUnderPreAuth",
        "parameters" : [ {
          "name" : "payment_pre_authorisation_id",
          "in" : "path",
          "description" : "Unique id of the payment pre-authorisation.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89ab][a-f0-9]{3}-[a-f0-9]{12}$",
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PreAuthorisedPaymentInitiation1"
              },
              "example" : {
                "payment_identification" : {
                  "end_to_end_identification" : "CustABookingRef"
                },
                "payment_type" : "FULL_full",
                "instructed_amount" : {
                  "currency" : "EUR",
                  "amount" : 1000
                },
                "requested_execution_date" : {
                  "date" : "01-09-2019"
                },
                "debtor" : {
                  "name" : "CustomerA",
                  "address" : {
                    "street_name" : "Avenue Adele",
                    "building_number" : 1,
                    "post_code" : 1310,
                    "town_name" : "La Hulpe",
                    "country" : "BE"
                  }
                },
                "debtor_account" : {
                  "iban" : "BH02CITI00001077181611"
                },
                "creditor_agent" : {
                  "financial_institution_identification" : {
                    "bicfi" : "BANKABEBB"
                  }
                },
                "creditor" : {
                  "name" : "MerchantA",
                  "address" : {
                    "post_code" : 1000,
                    "town_name" : "Brussels",
                    "country" : "BE"
                  },
                  "identification" : {
                    "organisation_identification" : {
                      "lei" : "213800IUXNWYNNC63Y45"
                    }
                  }
                },
                "creditor_account" : {
                  "iban" : "BA393385804800211234"
                },
                "purpose" : {
                  "description" : "Hotel reservation"
                },
                "remittance_information" : "HotelInvoice1234"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "Created",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PreAuthorisedPaymentInitiation1"
                },
                "example" : {
                  "pre_authorised_payment_initiation_id" : "ed0fc5fa-a126-4c0c-ae18-60bf0544783d",
                  "payment_pre_authorisation_id" : "91ebbd6a-6826-46c4-9651-af363744e09f",
                  "payment_identification" : {
                    "end_to_end_identification" : "CustABookingRef",
                    "uetr" : "ed0fc5fa-a126-4c0c-ae18-60bf0544783d"
                  },
                  "payment_type" : "FULL_full",
                  "instructed_amount" : {
                    "currency" : "EUR",
                    "amount" : 1000
                  },
                  "requested_execution_date" : {
                    "date" : "01-09-2019"
                  },
                  "debtor" : {
                    "name" : "CustomerA",
                    "address" : {
                      "street_name" : "Avenue Adele",
                      "building_number" : 1,
                      "post_code" : 1310,
                      "town_name" : "La Hulpe",
                      "country" : "BE"
                    }
                  },
                  "debtor_account" : {
                    "iban" : "BH02CITI00001077181611"
                  },
                  "creditor_agent" : {
                    "financial_institution_identification" : {
                      "bicfi" : "BANKABEBB"
                    }
                  },
                  "creditor" : {
                    "name" : "MerchantA",
                    "address" : {
                      "post_code" : 1000,
                      "town_name" : "Brussels",
                      "country" : "BE"
                    },
                    "identification" : {
                      "organisation_identification" : {
                        "lei" : "213800IUXNWYNNC63Y45"
                      }
                    }
                  },
                  "creditor_account" : {
                    "iban" : "BA393385804800211234"
                  },
                  "purpose" : {
                    "description" : "Hotel reservation"
                  },
                  "remittance_information" : "HotelInvoice1234"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "default" : {
            "description" : "Unexpected Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GenericStatus1"
                }
              }
            }
          }
        }
      }
    },
    "/payment-pre-authorisation/{payment_pre_authorisation_id}/payment-initiation/{pre_authorised_payment_initiation_id}/status" : {
      "get" : {
        "tags" : [ "preAuthorisedPaymentInitiation" ],
        "summary" : "Obtain the status of a pre-authorised payment initiation.",
        "description" : "This operation allows the merchant to get the status of a specific pre-authorised payment initiation.",
        "operationId" : "getPaymentInitiationStatusUnderPreAuth",
        "parameters" : [ {
          "name" : "payment_pre_authorisation_id",
          "in" : "path",
          "description" : "Unique id of the payment pre-authorisation.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89ab][a-f0-9]{3}-[a-f0-9]{12}$",
            "type" : "string"
          }
        }, {
          "name" : "pre_authorised_payment_initiation_id",
          "in" : "path",
          "description" : "Unique identification, as assigned by the server, to unambiguously identify the pre-authorised payment.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89ab][a-f0-9]{3}-[a-f0-9]{12}$",
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PreAuthorisedPaymentInitiationStatus1"
                },
                "example" : {
                  "status" : "PACK_accepted",
                  "uetr" : "ed0fc5fa-a126-4c0c-ae18-60bf0544783d"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "default" : {
            "description" : "Unexpected Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GenericStatus1"
                }
              }
            }
          }
        }
      }
    },
    "/payment-pre-authorisation/{payment_pre_authorisation_id}/status" : {
      "get" : {
        "tags" : [ "paymentPreAuthorisation" ],
        "summary" : "Obtain the status of a specific payment pre-authorisation.",
        "description" : "This operation allows the merchant to get the status of a specific pre-authorisation.",
        "operationId" : "getPaymentPreAuthorisationStatus",
        "parameters" : [ {
          "name" : "payment_pre_authorisation_id",
          "in" : "path",
          "description" : "Unique id of the payment pre-authorisation.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89ab][a-f0-9]{3}-[a-f0-9]{12}$",
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PaymentPreAuthorisationStatus1"
                },
                "example" : {
                  "status" : "REJT_rejected"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "default" : {
            "description" : "Unexpected Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GenericStatus1"
                }
              }
            }
          }
        }
      }
    }
  },
  "components" : {
    "schemas" : {
      "AccountIdentification40Choice" : {
        "type" : "object",
        "properties" : {
          "iban" : {
            "$ref" : "#/components/schemas/IBAN2007Identifier"
          },
          "other" : {
            "$ref" : "#/components/schemas/GenericAccountIdentification3"
          }
        },
        "additionalProperties" : false,
        "description" : "Specifies the unique identification of an account as assigned by the account servicer."
      },
      "ActiveCurrencyAndAmount" : {
        "type" : "object",
        "properties" : {
          "currency" : {
            "$ref" : "#/components/schemas/ActiveCurrencyCode"
          },
          "amount" : {
            "maxLength" : 19,
            "pattern" : "^-?0*(([0-9]{0,5}\\.[0-9]{1,13})|([0-9]{0,6}\\.[0-9]{1,12})|([0-9]{0,7}\\.[0-9]{1,11})|([0-9]{0,8}\\.[0-9]{1,10})|([0-9]{0,9}\\.[0-9]{1,9})|([0-9]{0,10}\\.[0-9]{1,8})|([0-9]{0,11}\\.[0-9]{1,7})|([0-9]{0,12}\\.[0-9]{1,6})|([0-9]{0,13}\\.[0-9]{1,5})|([0-9]{0,14}\\.[0-9]{1,4})|([0-9]{0,15}\\.[0-9]{1,3})|([0-9]{0,16}\\.[0-9]{1,2})|([0-9]{0,17}\\.[0-9]{1,1})0*|([0-9]{0,18}))$",
            "type" : "string"
          }
        },
        "description" : "A number of monetary units specified in an active currency where the unit of currency is explicit and compliant with ISO 4217."
      },
      "ActiveCurrencyCode" : {
        "pattern" : "^[A-Z]{3,3}$",
        "type" : "string",
        "description" : "> A code allocated to a currency by a Maintenance Agency under an international identification scheme as described in the latest edition of the international standard ISO 4217 \"Codes for the representation of currencies and funds\"."
      },
      "ActiveOrHistoricCurrencyAndAmount" : {
        "type" : "object",
        "properties" : {
          "currency" : {
            "$ref" : "#/components/schemas/ActiveOrHistoricCurrencyCode"
          },
          "amount" : {
            "maxLength" : 19,
            "pattern" : "^-?0*(([0-9]{0,5}\\.[0-9]{1,13})|([0-9]{0,6}\\.[0-9]{1,12})|([0-9]{0,7}\\.[0-9]{1,11})|([0-9]{0,8}\\.[0-9]{1,10})|([0-9]{0,9}\\.[0-9]{1,9})|([0-9]{0,10}\\.[0-9]{1,8})|([0-9]{0,11}\\.[0-9]{1,7})|([0-9]{0,12}\\.[0-9]{1,6})|([0-9]{0,13}\\.[0-9]{1,5})|([0-9]{0,14}\\.[0-9]{1,4})|([0-9]{0,15}\\.[0-9]{1,3})|([0-9]{0,16}\\.[0-9]{1,2})|([0-9]{0,17}\\.[0-9]{1,1})0*|([0-9]{0,18}))$",
            "type" : "string"
          }
        },
        "description" : "A number of monetary units specified in an active or a historic currency where the unit of currency is explicit and compliant with ISO 4217."
      },
      "ActiveOrHistoricCurrencyCode" : {
        "pattern" : "^[A-Z]{3,3}$",
        "type" : "string",
        "description" : "> A code allocated to a currency by a Maintenance Agency under an international identification scheme, as described in the latest edition of the international standard ISO 4217 \"Codes for the representation of currencies and funds\"."
      },
      "AnyBICDec2014Identifier" : {
        "pattern" : "^[A-Z0-9]{4,4}[A-Z]{2,2}[A-Z0-9]{2,2}([A-Z0-9]{3,3}){0,1}$",
        "type" : "string",
        "description" : "Code allocated to a financial or non-financial institution by the ISO 9362 Registration Authority, as described in ISO 9362: 2014 - \"Banking - Banking telecommunication messages - Business identifier code (BIC)\"."
      },
      "BICFIDec2014Identifier" : {
        "pattern" : "^[A-Z0-9]{4,4}[A-Z]{2,2}[A-Z0-9]{2,2}([A-Z0-9]{3,3}){0,1}$",
        "type" : "string",
        "description" : "Code allocated to a financial institution by the ISO 9362 Registration Authority as described in ISO 9362: 2014 - \"Banking - Banking telecommunication messages - Business identifier code (BIC)\"."
      },
      "PreAuthorisationFinancialInstitutionIdentification1" : {
        "required" : [ "financial_institution_identification" ],
        "type" : "object",
        "properties" : {
          "financial_institution_identification" : {
            "$ref" : "#/components/schemas/PreAuthorisationFinancialInstitutionIdentification2"
          },
          "branch_identification" : {
            "$ref" : "#/components/schemas/PreAuthorisationBranchData1"
          }
        },
        "additionalProperties" : false,
        "description" : "Unique and unambiguous identification of a financial institution or a branch of a financial institution."
      },
      "PreAuthorisationBranchData1" : {
        "type" : "object",
        "properties" : {
          "identification" : {
            "$ref" : "#/components/schemas/Max35Text"
          },
          "lei" : {
            "$ref" : "#/components/schemas/LEIIdentifier"
          },
          "name" : {
            "$ref" : "#/components/schemas/Max140Text"
          },
          "postal_address" : {
            "$ref" : "#/components/schemas/PreAuthorisationPostalAddress1"
          }
        },
        "additionalProperties" : false,
        "description" : "Information that locates and identifies a specific branch of a financial institution."
      },
      "ClearingSystemIdentification2Choice" : {
        "type" : "object",
        "properties" : {
          "code" : {
            "$ref" : "#/components/schemas/ExternalClearingSystemIdentification1Code"
          },
          "proprietary" : {
            "$ref" : "#/components/schemas/Max35Text"
          }
        },
        "additionalProperties" : false,
        "description" : "Choice of a clearing system identifier.",
        "oneOf" : [ {
          "required" : [ "code" ]
        }, {
          "required" : [ "proprietary" ]
        } ]
      },
      "ClearingSystemMemberIdentification2" : {
        "required" : [ "member_identification" ],
        "type" : "object",
        "properties" : {
          "clearing_system_identification" : {
            "$ref" : "#/components/schemas/ClearingSystemIdentification2Choice"
          },
          "member_identification" : {
            "$ref" : "#/components/schemas/Max35Text"
          }
        },
        "additionalProperties" : false,
        "description" : "Unique identification, as assigned by a clearing system, to unambiguously identify a member of the clearing system."
      },
      "ConsentPreAuthorisationUsage1" : {
        "required" : [ "pre_authorisation_purpose" ],
        "type" : "object",
        "properties" : {
          "allowed_merchants" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PreAuthorisationPartyIdentification1"
            }
          },
          "pre_authorisation_purpose" : {
            "$ref" : "#/components/schemas/PreAuthorisationPurpose1"
          },
          "maximum_amount" : {
            "$ref" : "#/components/schemas/ActiveCurrencyAndAmount"
          }
        },
        "additionalProperties" : false,
        "description" : "Specifies the usage and purpose of the consent."
      },
      "ConsumerPreAuthorisationConsent1" : {
        "required" : [ "address", "consent_attributes", "name" ],
        "type" : "object",
        "properties" : {
          "consumer_consent_id" : {
            "$ref" : "#/components/schemas/UUIDv4Identifier"
          },
          "name" : {
            "$ref" : "#/components/schemas/Max140Text"
          },
          "address" : {
            "$ref" : "#/components/schemas/PreAuthorisationPostalAddress1"
          },
          "status" : {
            "$ref" : "#/components/schemas/Max35Text"
          },
          "consent_attributes" : {
            "$ref" : "#/components/schemas/ConsentPreAuthorisationUsage1"
          },
          "valid_until" : {
            "$ref" : "#/components/schemas/DateAndDateTime2Choice"
          },
          "hal_links" : {
            "$ref" : "#/components/schemas/ConsumerPreAuthorisationConsentLinks"
          }
        },
        "additionalProperties" : false
      },
      "ConsumerPreAuthorisationConsentLinks" : {
        "type" : "object",
        "properties" : {
          "consent" : {
            "$ref" : "#/components/schemas/GenericLink"
          },
          "consent_status" : {
            "$ref" : "#/components/schemas/GenericLink"
          },
          "pre_authorisation" : {
            "$ref" : "#/components/schemas/GenericLink"
          }
        },
        "additionalProperties" : false,
        "description" : "Links that can be used for further navigation when browsing pre-authorisation and consent information at pre-authorisation level:\r\n      - consent: link to the next resource consent\r\n      - pre-authorisation: link to the payment pre-authorisations for which the consent has been requested/granted.\r\n      - consent status: link to the consent status"
      },
      "ConsumerPreAuthorisationConsentStatus1" : {
        "required" : [ "status" ],
        "type" : "object",
        "properties" : {
          "status" : {
            "$ref" : "#/components/schemas/Status5Code"
          },
          "hal_links" : {
            "$ref" : "#/components/schemas/ConsumerPreAuthorisationConsentStatusLinks"
          }
        },
        "additionalProperties" : false
      },
      "ConsumerPreAuthorisationConsentStatusLinks" : {
        "type" : "object",
        "properties" : {
          "consent" : {
            "$ref" : "#/components/schemas/GenericLink"
          },
          "pre_authorisation" : {
            "$ref" : "#/components/schemas/GenericLink"
          }
        },
        "additionalProperties" : false,
        "description" : "links that can be used for further navigation when browsing offer and consent information at pre-authorisation level:\r\n      - consent: link to the next resource consent\r\n      - pre-authorisation: link to the pre-authorisations"
      },
      "Contact4" : {
        "type" : "object",
        "properties" : {
          "name_prefix" : {
            "$ref" : "#/components/schemas/NamePrefix2Code"
          },
          "name" : {
            "$ref" : "#/components/schemas/Max140Text"
          },
          "phone_number" : {
            "$ref" : "#/components/schemas/PhoneNumber"
          },
          "mobile_number" : {
            "$ref" : "#/components/schemas/PhoneNumber"
          },
          "fax_number" : {
            "$ref" : "#/components/schemas/PhoneNumber"
          },
          "email_address" : {
            "$ref" : "#/components/schemas/Max2048Text"
          },
          "email_purpose" : {
            "$ref" : "#/components/schemas/Max35Text"
          },
          "job_title" : {
            "$ref" : "#/components/schemas/Max35Text"
          },
          "responsibility" : {
            "$ref" : "#/components/schemas/Max35Text"
          },
          "department" : {
            "$ref" : "#/components/schemas/Max70Text"
          },
          "other" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/OtherContact1"
            }
          },
          "preferred_method" : {
            "$ref" : "#/components/schemas/PreferredContactMethod1Code"
          }
        },
        "additionalProperties" : false,
        "description" : "Specifies the details of the contact person."
      },
      "CountryCode" : {
        "pattern" : "^[A-Z]{2,2}$",
        "type" : "string",
        "description" : "> Code to identify a country, a dependency, or another area of particular geopolitical interest, on the basis of country names obtained from the United Nations (ISO 3166, Alpha-2 code)."
      },
      "DateAndDateTime2Choice" : {
        "type" : "object",
        "properties" : {
          "date" : {
            "$ref" : "#/components/schemas/ISODate"
          },
          "date_time" : {
            "$ref" : "#/components/schemas/ISODateTime"
          }
        },
        "additionalProperties" : false,
        "description" : "Choice between a date or a date and time format.",
        "oneOf" : [ {
          "required" : [ "date" ]
        }, {
          "required" : [ "date_time" ]
        } ]
      },
      "DateAndPlaceOfBirth1" : {
        "required" : [ "birth_date", "city_of_birth", "country_of_birth" ],
        "type" : "object",
        "properties" : {
          "birth_date" : {
            "$ref" : "#/components/schemas/ISODate"
          },
          "province_of_birth" : {
            "$ref" : "#/components/schemas/Max35Text"
          },
          "city_of_birth" : {
            "$ref" : "#/components/schemas/Max35Text"
          },
          "country_of_birth" : {
            "$ref" : "#/components/schemas/CountryCode"
          }
        },
        "additionalProperties" : false,
        "description" : "Date and place of birth of a person."
      },
      "ExternalClearingSystemIdentification1Code" : {
        "maxLength" : 5,
        "minLength" : 1,
        "type" : "string",
        "description" : "> Specifies the clearing system identification code, as published in an external clearing system identification code list.\r\nExternal code sets can be downloaded from www.iso20022.org."
      },
      "ExternalFinancialInstitutionIdentification1Code" : {
        "maxLength" : 4,
        "minLength" : 1,
        "type" : "string",
        "description" : "> Specifies the external financial institution identification scheme name code in the format of character string with a maximum length of 4 characters.\r\nThe list of valid codes is an external code list published separately.\r\nExternal code sets can be downloaded from www.iso20022.org."
      },
      "FinancialIdentificationSchemeName1Choice" : {
        "type" : "object",
        "properties" : {
          "code" : {
            "$ref" : "#/components/schemas/ExternalFinancialInstitutionIdentification1Code"
          },
          "proprietary" : {
            "$ref" : "#/components/schemas/Max35Text"
          }
        },
        "additionalProperties" : false,
        "description" : "Sets of elements to identify a name of the organisation identification scheme.",
        "oneOf" : [ {
          "required" : [ "code" ]
        }, {
          "required" : [ "proprietary" ]
        } ]
      },
      "PreAuthorisationFinancialInstitutionIdentification2" : {
        "type" : "object",
        "properties" : {
          "bicfi" : {
            "$ref" : "#/components/schemas/BICFIDec2014Identifier"
          },
          "clearing_system_member_identification" : {
            "$ref" : "#/components/schemas/ClearingSystemMemberIdentification2"
          },
          "lei" : {
            "$ref" : "#/components/schemas/LEIIdentifier"
          },
          "name" : {
            "$ref" : "#/components/schemas/Max140Text"
          },
          "postal_address" : {
            "$ref" : "#/components/schemas/PreAuthorisationPostalAddress1"
          },
          "other" : {
            "$ref" : "#/components/schemas/GenericFinancialIdentification1"
          }
        },
        "additionalProperties" : false,
        "description" : "Specifies the details to identify a financial institution."
      },
      "Frequency6Code" : {
        "type" : "string",
        "description" : "> Specifies the regularity of an event.\n*`YEAR`-Event takes place every year or once a year.\n*`MNTH`-Event takes place every month or once a month.\n*`QURT`-Event takes place every three months or four times a year.\n*`MIAN`-Event takes place every six months or two times a year.\n*`WEEK`-Event takes place once a week.\n*`DAIL`-Event takes place every day.\n*`ADHO`-Event takes place on request or as necessary.\n*`INDA`-Event takes place several times a day.\n*`FRTN`-Event takes place every two weeks.",
        "enum" : [ "YEAR_annual", "MNTH_monthly", "QURT_quarterly", "MIAN_semi_annual", "WEEK_weekly", "DAIL_daily", "ADHO_adhoc", "INDA_intra_day", "FRTN_fortnightly" ]
      },
      "GenericAccountIdentification3" : {
        "required" : [ "identification" ],
        "type" : "object",
        "properties" : {
          "identification" : {
            "$ref" : "#/components/schemas/Max34Text"
          },
          "scheme_name" : {
            "$ref" : "#/components/schemas/Max35Text"
          }
        },
        "additionalProperties" : false,
        "description" : "Information related to a generic account identification."
      },
      "GenericFinancialIdentification1" : {
        "required" : [ "identification" ],
        "type" : "object",
        "properties" : {
          "identification" : {
            "$ref" : "#/components/schemas/Max35Text"
          },
          "scheme_name" : {
            "$ref" : "#/components/schemas/FinancialIdentificationSchemeName1Choice"
          },
          "issuer" : {
            "$ref" : "#/components/schemas/Max35Text"
          }
        },
        "additionalProperties" : false,
        "description" : "Information related to an identification of a financial institution."
      },
      "GenericLink" : {
        "required" : [ "href" ],
        "type" : "object",
        "properties" : {
          "href" : {
            "$ref" : "#/components/schemas/Max140Text"
          },
          "uri_template" : {
            "$ref" : "#/components/schemas/TrueFalseIndicator"
          }
        },
        "additionalProperties" : false,
        "description" : "hypertext reference"
      },
      "IBAN2007Identifier" : {
        "pattern" : "^[A-Z]{2,2}[0-9]{2,2}[a-zA-Z0-9]{1,30}$",
        "type" : "string",
        "description" : "An identifier used internationally by financial institutions to uniquely identify the account of a customer at a financial institution, as described in the latest edition of the international standard ISO 13616: 2007 - \"Banking and related financial services - International Bank Account Number (IBAN)\"."
      },
      "ISODate" : {
        "pattern" : "^(?:[1-9]\\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)$",
        "type" : "string",
        "description" : "A particular point in the progression of time in a calendar year expressed in the YYYY-MM-DD format. This representation is defined in \"XML Schema Part 2: Datatypes Second Edition - W3C Recommendation 28 October 2004\" which is aligned with ISO 8601."
      },
      "ISODateTime" : {
        "pattern" : "^(?:[1-9]\\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)T(?:[01]\\d|2[0-3]):[0-5]\\d:[0-5]\\d(?:\\.[0-9]+)?(?:Z|[+-][01]\\d:[0-5]\\d)?$",
        "type" : "string",
        "description" : "A particular point in the progression of time defined by a mandatory date and a mandatory time component, expressed in either UTC time format (YYYY-MM-DDThh:mm:ss.sssZ), local time with UTC offset format (YYYY-MM-DDThh:mm:ss.sss+/-hh:mm), or local time format (YYYY-MM-DDThh:mm:ss.sss). These representations are defined in \"XML Schema Part 2: Datatypes Second Edition - W3C Recommendation 28 October 2004\" which is aligned with ISO 8601.\nNote on the time format:\n1) beginning / end of calendar day\n00:00:00 = the beginning of a calendar day\n24:00:00 = the end of a calendar day\n2) fractions of second in time format\nDecimal fractions of seconds may be included. In this case, the involved parties shall agree on the maximum number of digits that are allowed."
      },
      "LEIIdentifier" : {
        "pattern" : "^[A-Z0-9]{18,18}[0-9]{2,2}$",
        "type" : "string",
        "description" : "Legal Entity Identifier is a code allocated to a party as described in ISO 17442 \"Financial Services - Legal Entity Identifier (LEI)\"."
      },
      "Max128Text" : {
        "maxLength" : 128,
        "minLength" : 1,
        "type" : "string",
        "description" : "Specifies a character string with a maximum length of 128 characters."
      },
      "Max140Text" : {
        "maxLength" : 140,
        "minLength" : 1,
        "type" : "string",
        "description" : "Specifies a character string with a maximum length of 140 characters."
      },
      "Max16Text" : {
        "maxLength" : 16,
        "minLength" : 1,
        "type" : "string",
        "description" : "Specifies a character string with a maximum length of 16 characters."
      },
      "Max2048Text" : {
        "maxLength" : 2048,
        "minLength" : 1,
        "type" : "string",
        "description" : "Specifies a character string with a maximum length of 2048 characters."
      },
      "Max34Text" : {
        "maxLength" : 34,
        "minLength" : 1,
        "type" : "string",
        "description" : "Specifies a character string with a maximum length of 34 characters."
      },
      "Max35Text" : {
        "maxLength" : 35,
        "minLength" : 1,
        "type" : "string",
        "description" : "Specifies a character string with a maximum length of 35 characters."
      },
      "Max4Text" : {
        "maxLength" : 4,
        "minLength" : 1,
        "type" : "string",
        "description" : "Specifies a character string with a maximum length of 4 characters."
      },
      "Max256Text" : {
        "maxLength" : 256,
        "minLength" : 1,
        "type" : "string",
        "description" : "Specifies a character string with a maximum length of 256 characters."
      },
      "Max500Text" : {
        "maxLength" : 500,
        "minLength" : 1,
        "type" : "string",
        "description" : "Specifies a character string with a maximum length of 500 characters."
      },
      "Max70Text" : {
        "maxLength" : 70,
        "minLength" : 1,
        "type" : "string",
        "description" : "Specifies a character string with a maximum length of 70characters."
      },
      "NamePrefix2Code" : {
        "type" : "string",
        "description" : "> Specifies the terms used to formally address a person.\n*`DOCT`-Title of the person is Doctor or Dr.\n*`MADM`-Title of the person is Madam.\n*`MISS`-Title of the person is Miss.\n*`MIST`-Title of the person is Mister or Mr.\n*`MIKS`-Title of the person is gender neutral (Mx).",
        "enum" : [ "DOCT_doctor", "MADM_madam", "MISS_miss", "MIST_mister", "MIKS_gender_neutral" ]
      },
      "Number" : {
        "maxLength" : 19,
        "type" : "string",
        "description" : "Number of objects represented as an integer."
      },
      "OtherContact1" : {
        "required" : [ "channel_type" ],
        "type" : "object",
        "properties" : {
          "channel_type" : {
            "$ref" : "#/components/schemas/Max4Text"
          },
          "identification" : {
            "$ref" : "#/components/schemas/Max128Text"
          }
        },
        "additionalProperties" : false,
        "description" : "Communication device number or electronic address used for communication."
      },
      "Party38Choice" : {
        "type" : "object",
        "properties" : {
          "organisation_identification" : {
            "$ref" : "#/components/schemas/PreAuthorisationOrganisationIdentification1"
          },
          "private_identification" : {
            "$ref" : "#/components/schemas/PreAuthorisationPersonIdentification1"
          }
        },
        "additionalProperties" : false,
        "description" : "Nature or use of the account."
      },
      "PaymentAuthorisationType1Choice" : {
        "type" : "object",
        "properties" : {
          "code" : {
            "$ref" : "#/components/schemas/PaymentAuthorisationType1Code"
          },
          "proprietary" : {
            "$ref" : "#/components/schemas/Max35Text"
          }
        },
        "additionalProperties" : false,
        "description" : "Specifies the type of the payment pre-authorisation.",
        "oneOf" : [ {
          "required" : [ "code" ]
        }, {
          "required" : [ "proprietary" ]
        } ]
      },
      "PaymentAuthorisationType1Code" : {
        "type" : "string",
        "description" : "> Type of a payment pre-authorisation.\n*`CRTL`-null\n*`OOFF`-null\n*`RCUR`-null",
        "enum" : [ "CRTL_credit_line", "OOFF_one_off", "RCUR_recurring" ]
      },
      "PaymentPreAuthorisation1" : {
        "required" : [ "consumer_consent_id", "purpose" ],
        "type" : "object",
        "properties" : {
          "payment_pre_authorisation_id" : {
            "$ref" : "#/components/schemas/UUIDv4Identifier"
          },
          "consumer_consent_id" : {
            "$ref" : "#/components/schemas/UUIDv4Identifier"
          },
          "maximum_amount" : {
            "$ref" : "#/components/schemas/ActiveCurrencyAndAmount"
          },
          "type" : {
            "$ref" : "#/components/schemas/PaymentAuthorisationType1Choice"
          },
          "purpose" : {
            "$ref" : "#/components/schemas/PreAuthorisationPurpose1"
          },
          "allowed_merchants" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PreAuthorisationPartyIdentification1"
            }
          },
          "valid_from" : {
            "$ref" : "#/components/schemas/DateAndDateTime2Choice"
          },
          "valid_until" : {
            "$ref" : "#/components/schemas/DateAndDateTime2Choice"
          },
          "recurrent_payment_data" : {
            "$ref" : "#/components/schemas/PreAuthorisationRecurrentPaymentData1"
          },
          "hal_links" : {
            "$ref" : "#/components/schemas/PaymentPreAuthorisationLinks"
          }
        },
        "additionalProperties" : false
      },
      "PaymentPreAuthorisationLinks" : {
        "type" : "object",
        "properties" : {
          "consent" : {
            "$ref" : "#/components/schemas/GenericLink"
          },
          "pre_authorised_payment_initiation" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/GenericLink"
            }
          },
          "charges" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/GenericLink"
            }
          }
        },
        "additionalProperties" : false,
        "description" : "links that can be used for further navigation when browsing pre-authorisation and consent information at pre-authorisation level:\r\n      - consent: link to the consents related to the pre-authorisation\r\n      - preauthorisationpaymentinitiation: link to the payments related to a pre-authorisation\r\n      - charges: link to the underlying charges related to the pre-authorisation"
      },
      "PaymentPreAuthorisationStatus1" : {
        "required" : [ "status" ],
        "type" : "object",
        "properties" : {
          "status" : {
            "$ref" : "#/components/schemas/Status5Code"
          },
          "hal_links" : {
            "$ref" : "#/components/schemas/PreAuthorisedPaymentInitiationStatusLinks"
          }
        },
        "additionalProperties" : false,
        "description" : "Contains the status of the payment pre-authorisation."
      },
      "PercentageRate" : {
        "maxLength" : 12,
        "type" : "string",
        "description" : "Rate expressed as a percentage, ie, in hundredths, eg, 0.7 is 7/10 of a percent, and 7.0 is 7%."
      },
      "PhoneNumber" : {
        "pattern" : "^\\+[0-9]{1,3}-[0-9()+\\-]{1,30}$",
        "type" : "string",
        "description" : "The collection of information which identifies a specific phone or FAX number as defined by telecom services.\nIt consists of a \"+\" followed by the country code (from 1 to 3 characters) then a \"-\" and finally, any combination of numbers, \"(\", \")\", \"+\" and \"-\" (up to 30 characters)."
      },
      "PreAuthorisationCharges1" : {
        "required" : [ "charge_id" ],
        "type" : "object",
        "properties" : {
          "charge_id" : {
            "$ref" : "#/components/schemas/UUIDv4Identifier"
          },
          "total" : {
            "$ref" : "#/components/schemas/ActiveCurrencyAndAmount"
          },
          "record" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PreAuthorisationChargesRecord1"
            }
          }
        },
        "additionalProperties" : false,
        "description" : "Provides further details on the charges and/or fees related to the pre-authorisation."
      },
      "PreAuthorisationChargesRecord1" : {
        "required" : [ "amount" ],
        "type" : "object",
        "properties" : {
          "amount" : {
            "$ref" : "#/components/schemas/ActiveCurrencyAndAmount"
          },
          "type" : {
            "$ref" : "#/components/schemas/Max35Text"
          },
          "rate" : {
            "$ref" : "#/components/schemas/PercentageRate"
          },
          "tax" : {
            "$ref" : "#/components/schemas/PreAuthorisationChargesTax1"
          }
        },
        "additionalProperties" : false,
        "description" : "Provides individual record details on the charges related to the pre-authorisation."
      },
      "PreAuthorisationChargesTax1" : {
        "type" : "object",
        "properties" : {
          "amount" : {
            "$ref" : "#/components/schemas/ActiveCurrencyAndAmount"
          },
          "type" : {
            "$ref" : "#/components/schemas/Max35Text"
          },
          "rate" : {
            "$ref" : "#/components/schemas/PercentageRate"
          }
        },
        "additionalProperties" : false,
        "description" : "Amount of money due to the tax authority, on the charges applied to the pre-authorisation.",
        "example" : { }
      },
      "PreAuthorisationGenericIdentification1" : {
        "required" : [ "identification" ],
        "type" : "object",
        "properties" : {
          "identification" : {
            "$ref" : "#/components/schemas/Max35Text"
          },
          "scheme_name" : {
            "$ref" : "#/components/schemas/Max35Text"
          }
        },
        "additionalProperties" : false,
        "description" : "Information related to an identification of party."
      },
      "PreAuthorisationLineItem1" : {
        "type" : "object",
        "properties" : {
          "amount" : {
            "$ref" : "#/components/schemas/ActiveCurrencyAndAmount"
          },
          "identification" : {
            "$ref" : "#/components/schemas/Max35Text"
          },
          "description" : {
            "$ref" : "#/components/schemas/Max2048Text"
          }
        },
        "additionalProperties" : false,
        "description" : "Provides the line item details.\r\n",
        "example" : { }
      },
      "PreAuthorisationOrganisationIdentification1" : {
        "type" : "object",
        "properties" : {
          "any_bic" : {
            "$ref" : "#/components/schemas/AnyBICDec2014Identifier"
          },
          "lei" : {
            "$ref" : "#/components/schemas/LEIIdentifier"
          },
          "other" : {
            "$ref" : "#/components/schemas/PreAuthorisationGenericIdentification1"
          }
        },
        "additionalProperties" : false,
        "description" : "Unique and unambiguous way to identify an organisation."
      },
      "PreAuthorisationPartyIdentification1" : {
        "required" : [ "name" ],
        "type" : "object",
        "properties" : {
          "name" : {
            "$ref" : "#/components/schemas/Max140Text"
          },
          "postal_address" : {
            "$ref" : "#/components/schemas/PreAuthorisationPostalAddress1"
          },
          "identification" : {
            "$ref" : "#/components/schemas/Party38Choice"
          },
          "contact_details" : {
            "$ref" : "#/components/schemas/Contact4"
          }
        },
        "additionalProperties" : false,
        "description" : "Specifies the identification of a person or an organisation."
      },
      "PreAuthorisationPersonIdentification1" : {
        "required" : [ "other" ],
        "type" : "object",
        "properties" : {
          "date_and_place_of_birth" : {
            "$ref" : "#/components/schemas/DateAndPlaceOfBirth1"
          },
          "other" : {
            "$ref" : "#/components/schemas/PreAuthorisationGenericIdentification1"
          }
        },
        "additionalProperties" : false,
        "description" : "Unique and unambiguous way to identify a person."
      },
      "PreAuthorisationPurpose1" : {
        "required" : [ "description" ],
        "type" : "object",
        "properties" : {
          "description" : {
            "$ref" : "#/components/schemas/Max500Text"
          },
          "line_item" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PreAuthorisationLineItem1"
            }
          }
        },
        "additionalProperties" : false,
        "description" : "Specifies the purpose for a pre-authorisation, including the line items when applicable."
      },
      "PreAuthorisationRecurrentPaymentData1" : {
        "type" : "object",
        "properties" : {
          "number_of_payments" : {
            "$ref" : "#/components/schemas/Number"
          },
          "first_payment_date_time" : {
            "$ref" : "#/components/schemas/DateAndDateTime2Choice"
          },
          "last_payment_date_time" : {
            "$ref" : "#/components/schemas/DateAndDateTime2Choice"
          },
          "frequency" : {
            "$ref" : "#/components/schemas/Frequency6Code"
          }
        },
        "additionalProperties" : false,
        "description" : "Specifies the details related to the recurrent payments."
      },
      "PreAuthorisedPaymentIdentification1" : {
        "required" : [ "end_to_end_identification" ],
        "type" : "object",
        "properties" : {
          "instruction_identification" : {
            "$ref" : "#/components/schemas/Max35Text"
          },
          "end_to_end_identification" : {
            "$ref" : "#/components/schemas/Max35Text"
          },
          "uetr" : {
            "$ref" : "#/components/schemas/UUIDv4Identifier"
          }
        },
        "additionalProperties" : false,
        "description" : "Provide further means of referencing a payment transaction."
      },
      "PreAuthorisedPaymentInitiation1" : {
        "required" : [ "creditor", "creditor_account", "creditor_agent", "debtor", "instructed_amount", "payment_identification", "requested_execution_date" ],
        "type" : "object",
        "properties" : {
          "pre_authorised_payment_initiation_id" : {
            "$ref" : "#/components/schemas/UUIDv4Identifier"
          },
          "payment_pre_authorisation_id" : {
            "$ref" : "#/components/schemas/UUIDv4Identifier"
          },
          "payment_identification" : {
            "$ref" : "#/components/schemas/PreAuthorisedPaymentIdentification1"
          },
          "payment_type" : {
            "$ref" : "#/components/schemas/PreAuthorisedPaymentType1Code"
          },
          "instructed_amount" : {
            "$ref" : "#/components/schemas/ActiveOrHistoricCurrencyAndAmount"
          },
          "requested_execution_date" : {
            "$ref" : "#/components/schemas/DateAndDateTime2Choice"
          },
          "acceptance_date_time" : {
            "$ref" : "#/components/schemas/ISODateTime"
          },
          "ultimate_debtor" : {
            "$ref" : "#/components/schemas/Max140Text"
          },
          "debtor" : {
            "$ref" : "#/components/schemas/PreAuthorisationPartyIdentification1"
          },
          "debtor_account" : {
            "$ref" : "#/components/schemas/AccountIdentification40Choice"
          },
          "creditor_agent" : {
            "$ref" : "#/components/schemas/PreAuthorisationFinancialInstitutionIdentification1"
          },
          "creditor" : {
            "$ref" : "#/components/schemas/PreAuthorisationPartyIdentification1"
          },
          "creditor_account" : {
            "$ref" : "#/components/schemas/AccountIdentification40Choice"
          },
          "ultimate_creditor" : {
            "$ref" : "#/components/schemas/Max140Text"
          },
          "purpose" : {
            "$ref" : "#/components/schemas/PreAuthorisationPurpose1"
          },
          "remittance_information" : {
            "$ref" : "#/components/schemas/Max140Text"
          },
          "hal_links" : {
            "$ref" : "#/components/schemas/PreAuthorisedPaymentInitiationLinks"
          }
        },
        "additionalProperties" : false,
        "description" : "Provides further details on the individual payment instruction which has been previously authorised."
      },
      "PreAuthorisedPaymentInitiationLinks" : {
        "type" : "object",
        "properties" : {
          "consent" : {
            "$ref" : "#/components/schemas/GenericLink"
          },
          "pre_authorisation" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/GenericLink"
            }
          },
          "pre_authorised_payment_initiation_status" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/GenericLink"
            }
          }
        },
        "additionalProperties" : false,
        "description" : "links that can be used for further navigation when browsing pre-authorisation and consent information at payment level:\r\n      - consent: link to the consent of a pre-authorisation\r\n      - pre-authorisation: link to the pre-authorisation of the payment."
      },
      "PreAuthorisedPaymentInitiationStatus1" : {
        "required" : [ "status" ],
        "type" : "object",
        "properties" : {
          "status" : {
            "$ref" : "#/components/schemas/Status5Code"
          },
          "uetr" : {
            "$ref" : "#/components/schemas/UUIDv4Identifier"
          },
          "hal_links" : {
            "$ref" : "#/components/schemas/PreAuthorisedPaymentInitiationStatusLinks"
          }
        },
        "additionalProperties" : false,
        "description" : "Contains the status of the pre-authorised payment."
      },
      "PreAuthorisedPaymentInitiationStatusLinks" : {
        "type" : "object",
        "properties" : {
          "consent" : {
            "$ref" : "#/components/schemas/GenericLink"
          },
          "pre_authorisation" : {
            "$ref" : "#/components/schemas/GenericLink"
          },
          "pre_authorised_payment_initiation" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/GenericLink"
            }
          }
        },
        "additionalProperties" : false,
        "description" : "links that can be used for further navigation when browsing pre-authorisation and consent information at payment level:\r\n      - consent: link to the consent of a pre-authorisation\r\n      - pre-authorisation: link to the pre-authorisation of the payment."
      },
      "PreAuthorisedPaymentType1Code" : {
        "type" : "string",
        "description" : "> Specifies the type of pre-authorised payment instruction, that is, whether the payment is issued for the full amount of the pre-authorisation or only partially."
      },
      "PreAuthorisationPostalAddress1" : {
        "type" : "object",
        "properties" : {
          "street_name" : {
            "$ref" : "#/components/schemas/Max70Text"
          },
          "building_number" : {
            "$ref" : "#/components/schemas/Max16Text"
          },
          "post_code" : {
            "$ref" : "#/components/schemas/Max16Text"
          },
          "town_name" : {
            "$ref" : "#/components/schemas/Max35Text"
          },
          "country" : {
            "$ref" : "#/components/schemas/CountryCode"
          },
          "address_line" : {
            "maxItems" : 2,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Max70Text"
            }
          }
        },
        "additionalProperties" : false,
        "description" : "Information that locates and identifies a specific address, as defined by postal services.",
        "example" : { }
      },
      "PreferredContactMethod1Code" : {
        "type" : "string",
        "description" : "> Preferred method used to reach the individual contact within an organisation.\n*`LETT`-Preferred method used to reach the contact is per letter.\n*`MAIL`-Preferred method used to reach the contact is per email.\n*`PHON`-Preferred method used to reach the contact is per phone.\n*`FAXX`-Preferred method used to reach the contact is per fax.\n*`CELL`-Preferred method used to reach the contact is per mobile or cell phone.",
        "enum" : [ "LETT_letter", "MAIL_email", "PHON_phone", "FAXX_fax", "CELL_mobile_or_cell_phone" ]
      },
      "Status5Code" : {
        "type" : "string",
        "description" : "> Specifies the status of an instruction.\n*`REJT`-Instruction has been rejected.\n*`PACK`-Instruction has been accepted and is validated for further processing.\n*`PDNG`-Instruction is pending.",
        "enum" : [ "REJT_rejected", "PACK_accepted", "PDNG_pending" ]
      },
      "TrueFalseIndicator" : {
        "type" : "boolean",
        "description" : "A flag indicating a True or False value."
      },
      "UUIDv4Identifier" : {
        "pattern" : "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89ab][a-f0-9]{3}-[a-f0-9]{12}$",
        "type" : "string",
        "description" : "Universally Unique IDentifier (UUID) version 4, as described in IETC RFC 4122 \"Universally Unique IDentifier (UUID) URN Namespace\"."
      },
      "GenericStatus1" : {
        "required" : [ "code", "severity", "text" ],
        "type" : "object",
        "properties" : {
          "code" : {
            "$ref" : "#/components/schemas/Max35Text"
          },
          "severity" : {
            "$ref" : "#/components/schemas/ErrorSeverity2Code"
          },
          "text" : {
            "$ref" : "#/components/schemas/Max256Text"
          },
          "user_message" : {
            "$ref" : "#/components/schemas/Max256Text"
          },
          "more_info" : {
            "$ref" : "#/components/schemas/Max256Text"
          }
        },
        "additionalProperties" : false,
        "description" : "Specifies the generic status as a result of a method applied to a Resource."
      },
      "ErrorSeverity2Code" : {
        "type" : "string",
        "description" : "- Fatal (FATL): The error is considered fatal.\n- Logical (LOGI): The error is considered logical.\n- Transient (TRAN): The error is considered transient.",
        "enum" : [ "FATL", "LOGI", "TRAN" ]
      }
    },
    "responses" : {
      "BadRequest" : {
        "description" : "Bad request",
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/GenericStatus1"
            }
          }
        }
      },
      "Unauthorized" : {
        "description" : "Unauthorized",
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/GenericStatus1"
            }
          }
        }
      },
      "Forbidden" : {
        "description" : "Forbidden",
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/GenericStatus1"
            }
          }
        }
      },
      "NotFound" : {
        "description" : "Not Found",
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/GenericStatus1"
            }
          }
        }
      },
      "Conflict" : {
        "description" : "Conflict",
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/GenericStatus1"
            }
          }
        }
      },
      "UnexpectedError" : {
        "description" : "Unexpected Error",
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/GenericStatus1"
            }
          }
        }
      }
    }
  }
}