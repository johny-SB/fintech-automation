<?xml version="1.0" encoding="UTF-8"?>
<con:soapui-project abortOnError="false" activeEnvironment="virt-server" created="3.10.0" encryptionMode="Not encrypted" id="ca7e0de5-f842-4af3-9603-63bce9b7a2c8" name="ADO-Functional-Test-Adv" resourceRoot="" runType="SEQUENTIAL" updated="3.10.0" xmlns:con="http://eviware.com/soapui/config">
  <con:settings>
    <con:setting id="ca7e0de5-f842-4af3-9603-63bce9b7a2c8fileName"/>
  </con:settings>
  <con:requirements/>
  <con:properties/>
  <con:wssContainer/>
  <con:databaseConnectionContainer>
    <con:databaseConnection>
      <con:name>s</con:name>
      <con:driver/>
      <con:connectionString/>
      <con:password/>
      <con:connectionProperties/>
    </con:databaseConnection>
  </con:databaseConnectionContainer>
  <con:jmsConnectionContainer/>
  <con:oAuth2ProfileContainer/>
  <con:oAuth1ProfileContainer/>
  <con:eventHandlers name="RequestFilter.filterRequest" type="RequestFilter.filterRequest">
    <con:script>// Sample event script to add custom HTTP header to all outgoing REST, SOAP and HTTP(S) calls
// This code is often used for adding custom authentication to ReadyAPI functional tests

// If hardcoding the token, uncomment and change line 5
// token = '4567'

// If your token is parameterized in Project level custom property, uncomment line 8
// token = request.parent.testCase.testSuite.project.getProperty('auth_token').getValue()

// To modify all outgoing calls, remove comments from lines 11 to 16
// headers = request.requestHeaders
// if (headers.containsKey('auth_token2') == false) {
//   headers.put('auth_token2', token)
//   request.requestHeaders = headers
// }</con:script>
  </con:eventHandlers>
  <con:eventHandlers name="TestRunListener.afterStep" type="TestRunListener.afterStep">
    <con:script>// Save all test step results into files
// Change the directory path in line 5 to a location where you want to store details
// then uncomment lines 5 to 10

// filePath = 'C:\\tempOutputDirectory\\'
// fos = new java.io.FileOutputStream(filePath + testStepResult.testStep.label + '.txt', true)
// pw = new java.io.PrintWriter(fos)
// testStepResult.writeTo(pw)
// pw.close()
// fos.close()</con:script>
  </con:eventHandlers>
  <con:environment id="1649efa3-0775-4f9d-b08c-a77d5f14e13a" index="0" name="virt-local">
    <con:service name="Simple Banking API V2" type="REST">
      <con:endpoint authProfile="No Authorization" proxyHost="" proxyPassword="" proxyPort="" proxyUsername="">http://localhost:8084</con:endpoint>
    </con:service>
    <con:databaseConnectionContainer>
      <con:databaseConnection>
        <con:name>s</con:name>
        <con:driver/>
        <con:connectionString/>
        <con:password/>
        <con:connectionProperties/>
      </con:databaseConnection>
    </con:databaseConnectionContainer>
    <con:jmsConnectionContainer/>
  </con:environment>
  <con:environment id="f23c3f8e-5ce0-4db9-8010-f24226d62368" index="1" name="virt-server">
    <con:service name="Simple Banking API V2" type="REST">
      <con:endpoint authProfile="No Authorization" proxyHost="" proxyPassword="" proxyPort="" proxyUsername="">http://18.224.146.21:8084/</con:endpoint>
    </con:service>
    <con:databaseConnectionContainer>
      <con:databaseConnection>
        <con:name>s</con:name>
        <con:driver/>
        <con:connectionString/>
        <con:password/>
        <con:connectionProperties/>
      </con:databaseConnection>
    </con:databaseConnectionContainer>
    <con:jmsConnectionContainer/>
  </con:environment>
  <con:environment id="c2321ade-990a-483c-8ab3-0dacddfe3840" index="2" name="virt-server-local">
    <con:service name="Simple Banking API V2" type="REST">
      <con:endpoint authProfile="No Authorization" proxyHost="" proxyPassword="" proxyPort="" proxyUsername="">http://192.168.0.102:8032/</con:endpoint>
    </con:service>
    <con:databaseConnectionContainer>
      <con:databaseConnection>
        <con:name>s</con:name>
        <con:driver/>
        <con:connectionString/>
        <con:password/>
        <con:connectionProperties/>
      </con:databaseConnection>
    </con:databaseConnectionContainer>
    <con:jmsConnectionContainer/>
  </con:environment>
  <con:virtServer>
    <con:name>AWS Prod</con:name>
    <con:url>https://18.224.146.21:9090</con:url>
  </con:virtServer>
  <con:authRepository/>
  <con:environmentSpec>
    <con:entry environmentId="1649efa3-0775-4f9d-b08c-a77d5f14e13a">
      <con:authProfile>No Authorization</con:authProfile>
    </con:entry>
    <con:entry environmentId="f23c3f8e-5ce0-4db9-8010-f24226d62368">
      <con:authProfile>No Authorization</con:authProfile>
    </con:entry>
    <con:entry environmentId="c2321ade-990a-483c-8ab3-0dacddfe3840">
      <con:authProfile>No Authorization</con:authProfile>
    </con:entry>
  </con:environmentSpec>
  <con:tags/>
</con:soapui-project>
